Problem Statement:
-------------------
Given an array of integers nums, return the length of the longest consecutive sequence of elements.

A consecutive sequence is a sequence of elements in which each element is exactly 1 greater than the previous element.

You must write an algorithm that runs in O(n) time.

Example 1:

Input: nums = [2,20,4,10,3,4,5]

Output: 4

Explanation: The longest consecutive sequence is [2, 3, 4, 5].

Example 2:

Input: nums = [0,3,2,5,4,6,1,1]

Output: 7


Solution:
---------
class Solution:
    def longestConsecutive(self, nums: List[int]) -> int:
        set_num = set(nums)

        longest = 0

        for i in set_num:
            # Checking if this number is start of sequence
            if (i-1) not in set_num:
                current_num = i
                current_streak = 1

                while( (current_num+1) in set_num):
                    current_num += 1
                    current_streak += 1
                longest = max(longest, current_streak)

        return longest
                    
Learnings:
----------
- Convert list to set to weed out the repititions
- Sequence starts from i if i-1 not in the set 

